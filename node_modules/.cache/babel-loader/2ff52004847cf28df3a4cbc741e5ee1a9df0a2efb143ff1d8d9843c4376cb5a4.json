{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brazuca\\\\Documents\\\\FrontEnd - projetos\\\\PROJETOS\\\\brla\\\\src\\\\components\\\\model\\\\FormModel\\\\FormModel.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormModel = ({\n  children,\n  buttonText,\n  onSubmit,\n  register,\n  errors\n}) => {\n  const handleSubmit = data => {\n    onSubmit(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [React.Children.map(children, child => {\n      if ( /*#__PURE__*/React.isValidElement(child)) {\n        return /*#__PURE__*/React.cloneElement(child, {\n          register,\n          errors\n        });\n      }\n      return child;\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c = FormModel;\nexport default FormModel;\nvar _c;\n$RefreshReg$(_c, \"FormModel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FormModel","children","buttonText","onSubmit","register","errors","handleSubmit","data","Children","map","child","isValidElement","cloneElement","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Brazuca/Documents/FrontEnd - projetos/PROJETOS/brla/src/components/model/FormModel/FormModel.tsx"],"sourcesContent":["import React from 'react';\r\nimport { UseFormReturn } from 'react-hook-form';\r\n\r\ninterface FormModelProps {\r\n    children?: React.ReactNode;\r\n    buttonText: string;\r\n    onSubmit(data: any): void;\r\n    register: UseFormReturn['register'];\r\n    errors: UseFormReturn['errors'];\r\n}\r\n\r\nconst FormModel: React.FC<FormModelProps> = ({ children, buttonText, onSubmit, register, errors }) => {\r\n    const handleSubmit = (data: any) => {\r\n        onSubmit(data);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {React.Children.map(children, child => {\r\n                if (React.isValidElement(child)) {\r\n                    return React.cloneElement(child, { register, errors });\r\n                }\r\n                return child;\r\n            })}\r\n            <button type=\"submit\">{buttonText}</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default FormModel;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW1B,MAAMC,SAAmC,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EAClG,MAAMC,YAAY,GAAIC,IAAS,IAAK;IAChCJ,QAAQ,CAACI,IAAI,CAAC;EAClB,CAAC;EAED,oBACIR,OAAA;IAAMI,QAAQ,EAAEG,YAAa;IAAAL,QAAA,GACxBJ,KAAK,CAACW,QAAQ,CAACC,GAAG,CAACR,QAAQ,EAAES,KAAK,IAAI;MACnC,kBAAIb,KAAK,CAACc,cAAc,CAACD,KAAK,CAAC,EAAE;QAC7B,oBAAOb,KAAK,CAACe,YAAY,CAACF,KAAK,EAAE;UAAEN,QAAQ;UAAEC;QAAO,CAAC,CAAC;MAC1D;MACA,OAAOK,KAAK;IAChB,CAAC,CAAC,eACFX,OAAA;MAAQc,IAAI,EAAC,QAAQ;MAAAZ,QAAA,EAAEC;IAAU;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEf,CAAC;AAACC,EAAA,GAhBIlB,SAAmC;AAkBzC,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}