{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brazuca\\\\Documents\\\\FrontEnd - projetos\\\\PROJETOS\\\\brla\\\\src\\\\components\\\\model\\\\FormContext\\\\FormContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormContext = /*#__PURE__*/createContext(undefined);\nexport const useFormContext = () => {\n  _s();\n  const context = useContext(FormContext);\n  if (!context) {\n    throw new Error('useFormContext must be used within a FormProvider');\n  }\n  return context;\n};\n_s(useFormContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const FormProvider = ({\n  children\n}) => {\n  _s2();\n  const formMethods = useForm();\n  return /*#__PURE__*/_jsxDEV(FormContext.Provider, {\n    value: formMethods,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n_s2(FormProvider, \"b+D2LqXbFSPSkv5GUlwABDrS2j8=\", false, function () {\n  return [useForm];\n});\n_c = FormProvider;\nvar _c;\n$RefreshReg$(_c, \"FormProvider\");","map":{"version":3,"names":["React","createContext","useContext","useForm","jsxDEV","_jsxDEV","FormContext","undefined","useFormContext","_s","context","Error","FormProvider","children","_s2","formMethods","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Brazuca/Documents/FrontEnd - projetos/PROJETOS/brla/src/components/model/FormContext/FormContext.tsx"],"sourcesContent":["import React, { createContext, useContext } from 'react';\r\nimport { useForm, UseFormReturn } from 'react-hook-form';\r\n\r\ninterface FormContextData extends UseFormReturn<any> {}\r\n\r\ninterface FormProviderProps {\r\n    children: ReactNode;\r\n  }\r\n\r\nconst FormContext = createContext<FormContextData | undefined>(undefined);\r\n\r\nexport const useFormContext = () => {\r\n  const context = useContext(FormContext);\r\n  if (!context) {\r\n    throw new Error('useFormContext must be used within a FormProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const FormProvider: React.FC = ({ children }) => {\r\n  const formMethods = useForm();\r\n  return <FormContext.Provider value={formMethods}>{children}</FormContext.Provider>;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,SAASC,OAAO,QAAuB,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQzD,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,OAAO,GAAGR,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,cAAc;AAQ3B,OAAO,MAAMI,YAAsB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACtD,MAAMC,WAAW,GAAGZ,OAAO,CAAC,CAAC;EAC7B,oBAAOE,OAAA,CAACC,WAAW,CAACU,QAAQ;IAACC,KAAK,EAAEF,WAAY;IAAAF,QAAA,EAAEA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AACpF,CAAC;AAACP,GAAA,CAHWF,YAAsB;EAAA,QACbT,OAAO;AAAA;AAAAmB,EAAA,GADhBV,YAAsB;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}